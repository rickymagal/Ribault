digraph AST {
  rankdir=TB;
  node [shape=box,fontname="monospace"];
  0 [shape=box,label="Program"];
  1 [shape=box,label="FunDecl main"];
  2 [shape=box,label="App"];
  3 [shape=box,label="Var validateDyck"];
  2 -> 3;
  4 [shape=box,label="Var inputSeq"];
  2 -> 4;
  1 -> 2;
  0 -> 1;
  5 [shape=box,label="FunDecl validateDyck"];
  6 [shape=box,label="Params lst"];
  5 -> 6;
  7 [shape=box,label="Case"];
  8 [shape=box,label="App"];
  9 [shape=box,label="Var checkRec"];
  8 -> 9;
  10 [shape=box,label="Var threshold"];
  8 -> 10;
  11 [shape=box,label="Var lst"];
  8 -> 11;
  7 -> 8;
  12 [shape=box,label="Alt"];
  13 [shape=box,label="PTuple/2"];
  14 [shape=box,label="PVar tot"];
  13 -> 14;
  15 [shape=box,label="PVar mn"];
  13 -> 15;
  16 [shape=box,label="BinOp &&"];
  17 [shape=box,label="BinOp =="];
  18 [shape=box,label="Var tot"];
  17 -> 18;
  19 [shape=box,label="Lit 0"];
  17 -> 19;
  16 -> 17;
  20 [shape=box,label="BinOp >="];
  21 [shape=box,label="Var mn"];
  20 -> 21;
  22 [shape=box,label="Lit 0"];
  20 -> 22;
  16 -> 20;
  12 -> 13;
  12 -> 16;
  7 -> 12;
  5 -> 7;
  0 -> 5;
  23 [shape=box,label="FunDecl checkRec"];
  24 [shape=box,label="Params lst n0"];
  23 -> 24;
  25 [shape=box,label="If"];
  26 [shape=box,label="BinOp <="];
  27 [shape=box,label="App"];
  28 [shape=box,label="Var len"];
  27 -> 28;
  29 [shape=box,label="Var lst"];
  27 -> 29;
  26 -> 27;
  30 [shape=box,label="Var n0"];
  26 -> 30;
  25 -> 26;
  31 [shape=box,label="App"];
  32 [shape=box,label="Var chunkPair"];
  31 -> 32;
  33 [shape=box,label="Var lst"];
  31 -> 33;
  25 -> 31;
  34 [shape=box,label="Case"];
  35 [shape=box,label="App"];
  36 [shape=box,label="Var splitImb"];
  35 -> 36;
  37 [shape=box,label="Var lst"];
  35 -> 37;
  34 -> 35;
  38 [shape=box,label="Alt"];
  39 [shape=box,label="PTuple/2"];
  40 [shape=box,label="PVar lft"];
  39 -> 40;
  41 [shape=box,label="PVar rgt"];
  39 -> 41;
  42 [shape=box,label="Case"];
  43 [shape=box,label="App"];
  44 [shape=box,label="Var checkRec"];
  43 -> 44;
  45 [shape=box,label="Var n0"];
  43 -> 45;
  46 [shape=box,label="Var lft"];
  43 -> 46;
  42 -> 43;
  47 [shape=box,label="Alt"];
  48 [shape=box,label="PTuple/2"];
  49 [shape=box,label="PVar s1"];
  48 -> 49;
  50 [shape=box,label="PVar m1"];
  48 -> 50;
  51 [shape=box,label="Case"];
  52 [shape=box,label="App"];
  53 [shape=box,label="Var checkRec"];
  52 -> 53;
  54 [shape=box,label="Var n0"];
  52 -> 54;
  55 [shape=box,label="Var rgt"];
  52 -> 55;
  51 -> 52;
  56 [shape=box,label="Alt"];
  57 [shape=box,label="PTuple/2"];
  58 [shape=box,label="PVar s2"];
  57 -> 58;
  59 [shape=box,label="PVar m2"];
  57 -> 59;
  60 [shape=box,label="Tuple/2"];
  61 [shape=box,label="BinOp +"];
  62 [shape=box,label="Var s1"];
  61 -> 62;
  63 [shape=box,label="Var s2"];
  61 -> 63;
  60 -> 61;
  64 [shape=box,label="If"];
  65 [shape=box,label="BinOp <"];
  66 [shape=box,label="Var m1"];
  65 -> 66;
  67 [shape=box,label="BinOp +"];
  68 [shape=box,label="Var s1"];
  67 -> 68;
  69 [shape=box,label="Var m2"];
  67 -> 69;
  65 -> 67;
  64 -> 65;
  70 [shape=box,label="Var m1"];
  64 -> 70;
  71 [shape=box,label="BinOp +"];
  72 [shape=box,label="Var s1"];
  71 -> 72;
  73 [shape=box,label="Var m2"];
  71 -> 73;
  64 -> 71;
  60 -> 64;
  56 -> 57;
  56 -> 60;
  51 -> 56;
  47 -> 48;
  47 -> 51;
  42 -> 47;
  38 -> 39;
  38 -> 42;
  34 -> 38;
  25 -> 34;
  23 -> 25;
  0 -> 23;
  74 [shape=box,label="FunDecl threshold"];
  75 [shape=box,label="BinOp /"];
  76 [shape=box,label="App"];
  77 [shape=box,label="Var n"];
  76 -> 77;
  78 [shape=box,label="Lit 0"];
  76 -> 78;
  75 -> 76;
  79 [shape=box,label="App"];
  80 [shape=box,label="Var p"];
  79 -> 80;
  81 [shape=box,label="Lit 0"];
  79 -> 81;
  75 -> 79;
  74 -> 75;
  0 -> 74;
  82 [shape=box,label="FunDecl splitImb"];
  83 [shape=box,label="Params xs"];
  82 -> 83;
  84 [shape=box,label="App"];
  85 [shape=box,label="Var splitAtN"];
  84 -> 85;
  86 [shape=box,label="BinOp /"];
  87 [shape=box,label="BinOp *"];
  88 [shape=box,label="App"];
  89 [shape=box,label="Var len"];
  88 -> 89;
  90 [shape=box,label="Var xs"];
  88 -> 90;
  87 -> 88;
  91 [shape=box,label="BinOp +"];
  92 [shape=box,label="Lit 100"];
  91 -> 92;
  93 [shape=box,label="App"];
  94 [shape=box,label="Var imb"];
  93 -> 94;
  95 [shape=box,label="Lit 0"];
  93 -> 95;
  91 -> 93;
  87 -> 91;
  86 -> 87;
  96 [shape=box,label="Lit 200"];
  86 -> 96;
  84 -> 86;
  97 [shape=box,label="Var xs"];
  84 -> 97;
  82 -> 84;
  0 -> 82;
  98 [shape=box,label="FunDecl chunkPair"];
  99 [shape=box,label="Params lst"];
  98 -> 99;
  100 [shape=box,label="Case"];
  101 [shape=box,label="App"];
  102 [shape=box,label="Var analyseChunk"];
  101 -> 102;
  103 [shape=box,label="Var lst"];
  101 -> 103;
  100 -> 101;
  104 [shape=box,label="Alt"];
  105 [shape=box,label="PList"];
  106 [shape=box,label="PVar s"];
  105 -> 106;
  107 [shape=box,label="PVar mn"];
  105 -> 107;
  108 [shape=box,label="Tuple/2"];
  109 [shape=box,label="Var s"];
  108 -> 109;
  110 [shape=box,label="Var mn"];
  108 -> 110;
  104 -> 105;
  104 -> 108;
  100 -> 104;
  98 -> 100;
  0 -> 98;
  111 [shape=box,label="FunDecl analyseChunk"];
  112 [shape=box,label="Params lst"];
  111 -> 112;
  113 [shape=box,label="Super[single]\\nname=s1\\ninput=lst\\noutput=res"];
  111 -> 113;
  0 -> 111;
  114 [shape=box,label="FunDecl inputSeq"];
  115 [shape=box,label="App"];
  116 [shape=box,label="Var generateDyck"];
  115 -> 116;
  117 [shape=box,label="App"];
  118 [shape=box,label="Var n"];
  117 -> 118;
  119 [shape=box,label="Lit 0"];
  117 -> 119;
  115 -> 117;
  120 [shape=box,label="App"];
  121 [shape=box,label="Var delta"];
  120 -> 121;
  122 [shape=box,label="Lit 0"];
  120 -> 122;
  115 -> 120;
  114 -> 115;
  0 -> 114;
  123 [shape=box,label="FunDecl generateDyck"];
  124 [shape=box,label="Params d len"];
  123 -> 124;
  125 [shape=box,label="Let"];
  126 [shape=box,label="Decls"];
  125 -> 126;
  127 [shape=box,label="FunDecl base"];
  128 [shape=box,label="App"];
  129 [shape=box,label="Var repeatDyck"];
  128 -> 129;
  130 [shape=box,label="BinOp /"];
  131 [shape=box,label="Var len"];
  130 -> 131;
  132 [shape=box,label="Lit 2"];
  130 -> 132;
  128 -> 130;
  133 [shape=box,label="List"];
  128 -> 133;
  127 -> 128;
  126 -> 127;
  134 [shape=box,label="If"];
  135 [shape=box,label="BinOp =="];
  136 [shape=box,label="Var d"];
  135 -> 136;
  137 [shape=box,label="Lit 0"];
  135 -> 137;
  134 -> 135;
  138 [shape=box,label="Var base"];
  134 -> 138;
  139 [shape=box,label="If"];
  140 [shape=box,label="BinOp >"];
  141 [shape=box,label="Var d"];
  140 -> 141;
  142 [shape=box,label="Lit 0"];
  140 -> 142;
  139 -> 140;
  143 [shape=box,label="App"];
  144 [shape=box,label="Var append"];
  143 -> 144;
  145 [shape=box,label="Var base"];
  143 -> 145;
  146 [shape=box,label="App"];
  147 [shape=box,label="Var replicateN"];
  146 -> 147;
  148 [shape=box,label="Var d"];
  146 -> 148;
  149 [shape=box,label="Lit 1"];
  146 -> 149;
  143 -> 146;
  139 -> 143;
  150 [shape=box,label="App"];
  151 [shape=box,label="Var append"];
  150 -> 151;
  152 [shape=box,label="Var base"];
  150 -> 152;
  153 [shape=box,label="App"];
  154 [shape=box,label="Var replicateN"];
  153 -> 154;
  155 [shape=box,label="BinOp -"];
  156 [shape=box,label="Lit 0"];
  155 -> 156;
  157 [shape=box,label="Var d"];
  155 -> 157;
  153 -> 155;
  158 [shape=box,label="UnOp negate"];
  159 [shape=box,label="Lit 1"];
  158 -> 159;
  153 -> 158;
  150 -> 153;
  139 -> 150;
  134 -> 139;
  125 -> 134;
  123 -> 125;
  0 -> 123;
  160 [shape=box,label="FunDecl append"];
  161 [shape=box,label="Params ys xs"];
  160 -> 161;
  162 [shape=box,label="Case"];
  163 [shape=box,label="Var xs"];
  162 -> 163;
  164 [shape=box,label="Alt"];
  165 [shape=box,label="PList"];
  166 [shape=box,label="Var ys"];
  164 -> 165;
  164 -> 166;
  162 -> 164;
  167 [shape=box,label="Alt"];
  168 [shape=box,label="PTuple/1"];
  169 [shape=box,label="PCons (:)"];
  170 [shape=box,label="PVar h"];
  171 [shape=box,label="PVar ts"];
  169 -> 170;
  169 -> 171;
  168 -> 169;
  172 [shape=box,label="Cons (:)"];
  173 [shape=box,label="Var h"];
  172 -> 173;
  174 [shape=box,label="App"];
  175 [shape=box,label="Var append"];
  174 -> 175;
  176 [shape=box,label="Var ts"];
  174 -> 176;
  177 [shape=box,label="Var ys"];
  174 -> 177;
  172 -> 174;
  167 -> 168;
  167 -> 172;
  162 -> 167;
  160 -> 162;
  0 -> 160;
  178 [shape=box,label="FunDecl repeatDyck"];
  179 [shape=box,label="Params acc m"];
  178 -> 179;
  180 [shape=box,label="If"];
  181 [shape=box,label="BinOp =="];
  182 [shape=box,label="Var m"];
  181 -> 182;
  183 [shape=box,label="Lit 0"];
  181 -> 183;
  180 -> 181;
  184 [shape=box,label="Var acc"];
  180 -> 184;
  185 [shape=box,label="App"];
  186 [shape=box,label="Var repeatDyck"];
  185 -> 186;
  187 [shape=box,label="BinOp -"];
  188 [shape=box,label="Var m"];
  187 -> 188;
  189 [shape=box,label="Lit 1"];
  187 -> 189;
  185 -> 187;
  190 [shape=box,label="Cons (:)"];
  191 [shape=box,label="Lit 1"];
  190 -> 191;
  192 [shape=box,label="Cons (:)"];
  193 [shape=box,label="UnOp negate"];
  194 [shape=box,label="Lit 1"];
  193 -> 194;
  192 -> 193;
  195 [shape=box,label="Var acc"];
  192 -> 195;
  190 -> 192;
  185 -> 190;
  180 -> 185;
  178 -> 180;
  0 -> 178;
  196 [shape=box,label="FunDecl replicateN"];
  197 [shape=box,label="Params x k"];
  196 -> 197;
  198 [shape=box,label="If"];
  199 [shape=box,label="BinOp <="];
  200 [shape=box,label="Var k"];
  199 -> 200;
  201 [shape=box,label="Lit 0"];
  199 -> 201;
  198 -> 199;
  202 [shape=box,label="List"];
  198 -> 202;
  203 [shape=box,label="Cons (:)"];
  204 [shape=box,label="Var x"];
  203 -> 204;
  205 [shape=box,label="App"];
  206 [shape=box,label="Var replicateN"];
  205 -> 206;
  207 [shape=box,label="BinOp -"];
  208 [shape=box,label="Var k"];
  207 -> 208;
  209 [shape=box,label="Lit 1"];
  207 -> 209;
  205 -> 207;
  210 [shape=box,label="Var x"];
  205 -> 210;
  203 -> 205;
  198 -> 203;
  196 -> 198;
  0 -> 196;
  211 [shape=box,label="FunDecl splitAtN"];
  212 [shape=box,label="Params xs k"];
  211 -> 212;
  213 [shape=box,label="Tuple/2"];
  214 [shape=box,label="App"];
  215 [shape=box,label="Var takeN"];
  214 -> 215;
  216 [shape=box,label="Var k"];
  214 -> 216;
  217 [shape=box,label="Var xs"];
  214 -> 217;
  213 -> 214;
  218 [shape=box,label="App"];
  219 [shape=box,label="Var dropN"];
  218 -> 219;
  220 [shape=box,label="Var k"];
  218 -> 220;
  221 [shape=box,label="Var xs"];
  218 -> 221;
  213 -> 218;
  211 -> 213;
  0 -> 211;
  222 [shape=box,label="FunDecl dropN"];
  223 [shape=box,label="Params xs k"];
  222 -> 223;
  224 [shape=box,label="If"];
  225 [shape=box,label="BinOp <="];
  226 [shape=box,label="Var k"];
  225 -> 226;
  227 [shape=box,label="Lit 0"];
  225 -> 227;
  224 -> 225;
  228 [shape=box,label="Var xs"];
  224 -> 228;
  229 [shape=box,label="Case"];
  230 [shape=box,label="Var xs"];
  229 -> 230;
  231 [shape=box,label="Alt"];
  232 [shape=box,label="PList"];
  233 [shape=box,label="List"];
  231 -> 232;
  231 -> 233;
  229 -> 231;
  234 [shape=box,label="Alt"];
  235 [shape=box,label="PTuple/1"];
  236 [shape=box,label="PCons (:)"];
  237 [shape=box,label="PWildcard"];
  238 [shape=box,label="PVar ys"];
  236 -> 237;
  236 -> 238;
  235 -> 236;
  239 [shape=box,label="App"];
  240 [shape=box,label="Var dropN"];
  239 -> 240;
  241 [shape=box,label="BinOp -"];
  242 [shape=box,label="Var k"];
  241 -> 242;
  243 [shape=box,label="Lit 1"];
  241 -> 243;
  239 -> 241;
  244 [shape=box,label="Var ys"];
  239 -> 244;
  234 -> 235;
  234 -> 239;
  229 -> 234;
  224 -> 229;
  222 -> 224;
  0 -> 222;
  245 [shape=box,label="FunDecl takeN"];
  246 [shape=box,label="Params xs k"];
  245 -> 246;
  247 [shape=box,label="If"];
  248 [shape=box,label="BinOp <="];
  249 [shape=box,label="Var k"];
  248 -> 249;
  250 [shape=box,label="Lit 0"];
  248 -> 250;
  247 -> 248;
  251 [shape=box,label="List"];
  247 -> 251;
  252 [shape=box,label="Case"];
  253 [shape=box,label="Var xs"];
  252 -> 253;
  254 [shape=box,label="Alt"];
  255 [shape=box,label="PList"];
  256 [shape=box,label="List"];
  254 -> 255;
  254 -> 256;
  252 -> 254;
  257 [shape=box,label="Alt"];
  258 [shape=box,label="PTuple/1"];
  259 [shape=box,label="PCons (:)"];
  260 [shape=box,label="PVar y"];
  261 [shape=box,label="PVar ys"];
  259 -> 260;
  259 -> 261;
  258 -> 259;
  262 [shape=box,label="Cons (:)"];
  263 [shape=box,label="Var y"];
  262 -> 263;
  264 [shape=box,label="App"];
  265 [shape=box,label="Var takeN"];
  264 -> 265;
  266 [shape=box,label="BinOp -"];
  267 [shape=box,label="Var k"];
  266 -> 267;
  268 [shape=box,label="Lit 1"];
  266 -> 268;
  264 -> 266;
  269 [shape=box,label="Var ys"];
  264 -> 269;
  262 -> 264;
  257 -> 258;
  257 -> 262;
  252 -> 257;
  247 -> 252;
  245 -> 247;
  0 -> 245;
  270 [shape=box,label="FunDecl len"];
  271 [shape=box,label="Params xs"];
  270 -> 271;
  272 [shape=box,label="Case"];
  273 [shape=box,label="Var xs"];
  272 -> 273;
  274 [shape=box,label="Alt"];
  275 [shape=box,label="PList"];
  276 [shape=box,label="Lit 0"];
  274 -> 275;
  274 -> 276;
  272 -> 274;
  277 [shape=box,label="Alt"];
  278 [shape=box,label="PTuple/1"];
  279 [shape=box,label="PCons (:)"];
  280 [shape=box,label="PWildcard"];
  281 [shape=box,label="PVar ys"];
  279 -> 280;
  279 -> 281;
  278 -> 279;
  282 [shape=box,label="BinOp +"];
  283 [shape=box,label="Lit 1"];
  282 -> 283;
  284 [shape=box,label="App"];
  285 [shape=box,label="Var len"];
  284 -> 285;
  286 [shape=box,label="Var ys"];
  284 -> 286;
  282 -> 284;
  277 -> 278;
  277 -> 282;
  272 -> 277;
  270 -> 272;
  0 -> 270;
  287 [shape=box,label="FunDecl delta"];
  288 [shape=box,label="Params x"];
  287 -> 288;
  289 [shape=box,label="Lit 0"];
  287 -> 289;
  0 -> 287;
  290 [shape=box,label="FunDecl imb"];
  291 [shape=box,label="Params x"];
  290 -> 291;
  292 [shape=box,label="Lit 1"];
  290 -> 292;
  0 -> 290;
  293 [shape=box,label="FunDecl p"];
  294 [shape=box,label="Params x"];
  293 -> 294;
  295 [shape=box,label="Lit 8"];
  293 -> 295;
  0 -> 293;
  296 [shape=box,label="FunDecl n"];
  297 [shape=box,label="Params x"];
  296 -> 297;
  298 [shape=box,label="Lit 10000"];
  296 -> 298;
  0 -> 296;
}
