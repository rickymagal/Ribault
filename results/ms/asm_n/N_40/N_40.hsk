-- Merge Sort in the subset of the compiled functional language

-- Merge two sorted lists into a single sorted list
merge xs ys = case xs of
    [] -> ys;
    (x:xt) -> case ys of
        [] -> xs;
        (y:yt) -> if x <= y
                  then x : merge xt ys
                  else y : merge xs yt;;
;
-- Split a list into two approximately equal halves
split lst = case lst of
  []   -> ([], []);
  [x]  -> ([x], []);
  x:y:zs ->
    case split zs of
      (xs, ys) -> (x:xs, y:ys);;
;


-- Merge Sort function
mergeSort lst = case lst of
    [] -> [];
    (x:[]) -> [x];
    _ -> case split lst of
           (left, right) -> merge (mergeSort left) (mergeSort right);;
;
-- Main expression for testing
main = mergeSort [[670487,116739,26225,777572,288389,256787,234053,146316,772246,107473,709570,776646,935518,571858,91161,619176,442417,33326,31244,98246,229258,243962,529903,631262,27824,588508,208496,750800,681453,735392,571412,439898,231148,471029,617889,291704,848749,911527,6814,795667]]