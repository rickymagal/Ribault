-- concatena duas listas
append xs ys = case xs of
  []      -> ys;
  (h:t)   -> h : append t ys;;

-- lookupAdj: busca lista de adjacÃªncia de u em graph
lookupAdj u graph = case graph of
  []             -> [];
  ((v,adj):rs)   -> if u == v then adj else lookupAdj u rs;;

-- bfsAux: percorre a fila em largura sem checar duplicados
bfsAux graph queue = case queue of
  []      -> [];
  (u:qs)  -> u : bfsAux graph (append qs (lookupAdj u graph));;

-- entry point
bfs graph root = bfsAux graph [root];

-- exemplo de grafo e chamada
main = bfs
  [ (1,[2,3])
  , (2,[4])
  , (3,[4,5])
  , (4,[])
  , (5,[1])
  ]
  1
